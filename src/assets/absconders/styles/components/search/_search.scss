// ===========================================
//
//      SEARCH
//      ....................
//      - assumed to be nested within <form>
//      - in order to place search button within search field,
//        we wrap the input and button within the same container and style it to mimic an infput field
//
// ===========================================

//  8. widths
// ************************
//  - for unique search widths, either wrap the search form in .search,
//    or add .search to the form itself
// ************************

.search form,
form.search { max-width: 64rem; }


//  8. pseudo-search wrapper
// ************************
//  - to place the search button within and to the right side of the search element
//    we had to simulate the exterior of the ssearch input, to nest everything.
//  - this works out well for keeping code tidy, because the search inputs are getting nested within forms anyway,
//    may as well merge them.
//  - usage:
//
//      <form class="pseudo-search">
//          <input type="search">
//          <label>
//              <select>
//          <label>
//              <select>
//          <button>
//      </form>
//
// ************************

.pseudo-search {

    display: flex;
    // TODO: non-flex fallback
    // @include span(12 of 12);
    border: 0.2rem solid $wht; // $gry
    background: transparent;

    @include anim($global-animation);
    & > * {@include anim($global-animation);}

    @media #{$medium-down} { display: block; @include clear(); }

    //  forces equal heights - TODO: improve this
    // ************************
    input[type="search"], button, select, select > option { max-height: 3.157rem + $base-horizontal-small; }
    input[type="search"], button, select > option { min-height: 3.157rem + $base-horizontal-small; }
    // input[type="search"],
    select > option { line-height: 3.157rem  + $base-horizontal-small; vertical-align: middle; }

    // search input
    // ************************
    & > input[type="search"] {
        margin: auto;
        padding: 1rem $base-vertical;
        border:0;
        color: $gry;
        background-color: transparent;
        &:focus, &:focus:active {background-color: $wht; color: $slate;}
        @media #{$medium-down} { @include span(12 of 12); }
    }

    // search button
    // ************************
    button {
        padding: 1em $base-vertical;
        margin: auto 0;
        border: none;
        background: transparent;
        cursor: pointer;
        color: $placholderTextcolor;
        @include hover() { color: $slate; background: $wht; } // color: $wht; background-color:$slate;
        @media #{$medium-only} { @include span(4 of 12 last no-gutters); width: 33.3333333%; }
        @media #{$small-only} { width: 20%; }
    }

    //  county / gender dropdowns
    // *****************************

    // select TODO: why is this here?
    // select {
    //     color: $slate;
    //     @include triangle($gry_muted);
    // }

    //  select - dropdowns
    // *****************************
    // label {
    //     // width: span(4 of 12);
    //     @include clear();
    //     @include span(4 of 12);
    //     padding: 0;
    //     margin: auto;
    //     height: 100%;
    //     // @include hover() { color: $slate; }
    //     @media #{$medium-down} {
    //         @include span(4 of 12 no-gutters);
    //         width: 33.3333333%;
    //     }
    //     @media #{$small-only} {width: 40%;}
    // }

    select {

        // width: span(4 of 12);
        @include clear();
        @include span(4 of 12);
        border: 0;
        margin: 0 auto;
        padding: 0;
        // height: 100%;
        text-align: center;
        background-color: transparent;
        color: $placholderTextcolor;

        // each dropdown item
        & > option {
            // @include type-setting(0);
            color: $slate;
            background-color: transparent;
            &:disabled {color: $placholderTextcolor;} // work around for placeholder
        }

        // IE - hides default dropdown arrows
        select::-ms-expand {display: none;}

        @include triangle($placholderTextcolor);
        background-position: 80% 50%;

        // &:active, &:focus {
        //     color: $wht;
        //     @include triangle($wht);
        //     background-position: 80% 50%;
        // }
        @include hover_only(){
            color: $slate;
            @include triangle($slate);
            background-position: 80% 50%;
            // &:active, &:focus { color: $slate; }
        }

        @media #{$medium-down} { @include span(4 of 12 no-gutters);  width: 33.3333333%; }
        @media #{$medium-only} { padding-left: $base-vertical;text-align: left; }
        @media #{$small-only} {width: 40%; text-align: left; padding-left: $base-vertical; }

    }

    // pre-search-focused color
    // select option {
    //     color: $placholderTextcolor;
    //     background-color: transparent;
    //     &:disabled {color: $placholderTextcolor;} // work around for placeholder
    //     @include type-setting(0);
    // }

    //  hover / focus baackgrounds
    // *****************************
    //  - uses input states to trigger adjacent labels and button to also
    //    have a white background when the search input has focus
    // *****************************

    // hover and focus states
    // ************************
    &:focus input ~ select,
    &:hover input ~ select { background-color:$wht; color: $placholderTextcolor; border-color: $wht;}

    // checked + focus state
    // ************************
    input[type="search"]:focus ~ select,
    input[type="search"]:checked ~ select,
    input[type="search"]:focus ~ button,
    input[type="search"]:checked ~ button { background-color: $wht; color: $placholderTextcolor; }

    // hover state whilst checked
    // ****************************
    &:hover input[type="search"]:checked ~ button,
    input[type="search"]:checked:focus ~ button { color: $slate; }
    &:hover input[type="search"]:checked ~ select > option:disabled,
    input[type="search"]:checked:focus ~ select > option:disabled {
        color: $wht;
        @include triangle($wht);
        background-position: 80% 50%;
    }

    // when the wrapper element is hovered, applies unified styles throughout
    // ************************************************************************
    @include hover() {
        color: $placholderTextcolor;
        border-color: $wht;
        background: $wht;
        select,
        select > option,
        select option:disabled {color: $placholderTextcolor; background-color: $wht;}
        input[type="search"] { color: $placholderTextcolor; }
        button.fa {
            color: $placholderTextcolor;
            @include hover() {color: $slate; background-color: $wht;}
        }

        // // hover and focus states
        // // ************************
        // &:focus input ~ label,
        // &:hover input ~ label { background-color:$wht; color: $placholderTextcolor; border-color: $wht;}
        //
        // // checked + focus state
        // // ************************
        // input[type="search"]:focus ~ label,
        // input[type="search"]:checked ~ label,
        // input[type="search"]:focus ~ button,
        // input[type="search"]:checked ~ button { background-color: $wht; color: $placholderTextcolor; }
        //
        // // hover state whilst checked
        // // ****************************
        // &:hover input[type="search"]:checked ~ button,
        // input[type="search"]:checked:focus ~ button { color: $slate; }
        // &:hover input[type="search"]:checked ~ label > select,
        // input[type="search"]:checked:focus ~ label > select {
        //     color: $slate;
        //     @include triangle($slate);
        //     background-position: 80% 50%;
        // }
    }

}
